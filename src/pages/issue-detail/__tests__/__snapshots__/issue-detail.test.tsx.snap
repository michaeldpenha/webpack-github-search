// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testing issue detail renders issue detail 1`] = `
<div>
  <h2
    class="styles__IssueTitle-sc-1hpakx1-0 hPAZyG"
  />
  <div
    class="styles__IssueTags-sc-1hpakx1-1 cUVUGk"
  >
    <p
      class="styles__IssueStatus-sc-1hpakx1-3 eKwyHN"
    >
      Opened
    </p>
    <p
      class="styles__IssueDate-sc-1hpakx1-2 fNswyQ"
    >
      Created by undefined . 25 comments
    </p>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
      />
      undefined commented 
    </header>
    <article>
      No Content available
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/29597?u=417a1ec63c2396239beb9453aafdd54275c94765&v=4"
      />
      bvaughn commented 11 days ago
    </header>
    <article>
      <p>
        <a
          class="user-mention"
          data-hovercard-type="user"
          data-hovercard-url="/users/dharapx/hovercard"
          data-octo-click="hovercard-link-click"
          data-octo-dimensions="link_type:self"
          href="https://github.com/dharapx"
        >
          @dharapx
        </a>
         Sorry you hit this problem
      </p>
      

      <p>
        Unfortunately though, it doesn't look like this bug report has enough info for one of us to reproduce it.
      </p>
      

      <p>
        Please provide a CodeSandbox (
        <a
          href="https://codesandbox.io/s/new"
          rel="nofollow"
        >
          https://codesandbox.io/s/new
        </a>
        ), a link to a repository on GitHub, or provide a minimal code example that reproduces the problem. Screenshots or videos can also be helpful if they help provide context on how to repro the bug.
      </p>
      

      <p>
        Here are some tips for providing a minimal example: 
        <a
          href="https://stackoverflow.com/help/mcve"
          rel="nofollow"
        >
          https://stackoverflow.com/help/mcve
        </a>
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/8448004?v=4"
      />
      ZackeryBayle commented 10 days ago
    </header>
    <article>
      <p>
        Project: 
        <a
          href="https://github.com/ZackeryBayle/TrollyReactJS"
        >
          https://github.com/ZackeryBayle/TrollyReactJS
        </a>
        <br />
        
Back end: 
        <a
          href="https://github.com/ZackeryBayle/TrollyCRM"
        >
          https://github.com/ZackeryBayle/TrollyCRM
        </a>
      </p>
      

      <p>
        While working on the project doing some code splitting.
      </p>
      

      <p>
        <code>
           Update existing issue: Error: "Cannot add node "1" because a node with that id is already in the Store." Uncaught Error: Cannot add node "1" because a node with that id is already in the Store.
        </code>
        <br />
        
I am pretty new so please forgive the crazy mess you are about to witness.
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/29597?u=417a1ec63c2396239beb9453aafdd54275c94765&v=4"
      />
      bvaughn commented 10 days ago
    </header>
    <article>
      <p>
        Hey 
        <a
          class="user-mention"
          data-hovercard-type="user"
          data-hovercard-url="/users/ZackeryBayle/hovercard"
          data-octo-click="hovercard-link-click"
          data-octo-dimensions="link_type:self"
          href="https://github.com/ZackeryBayle"
        >
          @ZackeryBayle
        </a>
        ! This is a great help.
      </p>
      

      <blockquote>
        

        <p>
          While working on the project doing some code splitting.
        </p>
        

      </blockquote>
      

      <p>
        Can you elaborate a little more on what I'd need to do to reproduce the error myself beyond running these two projects locally?
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/8448004?v=4"
      />
      ZackeryBayle commented 10 days ago
    </header>
    <article>
      <p>
        <a
          class="user-mention"
          data-hovercard-type="user"
          data-hovercard-url="/users/bvaughn/hovercard"
          data-octo-click="hovercard-link-click"
          data-octo-dimensions="link_type:self"
          href="https://github.com/bvaughn"
        >
          @bvaughn
        </a>
         - I was working on just rendering some props on the home screen after splitting my form code into its own component.
        <br />
        
On render throws error
        <br />
        
Page still renders
      </p>
      

      <p>
        I hope that helps, let me know if there is anything else I can provide.
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/8448004?v=4"
      />
      ZackeryBayle commented 10 days ago
    </header>
    <article>
      <p>
        I have simply removed everything from the rendering page (home.js) and the error still happens. The only thing being rendered is my navBar and footer. Nothing has changed on these components for weeks. I haven't done any updates to dependence.
      </p>
      

      <p>
        <a
          href="https://user-images.githubusercontent.com/8448004/117327908-f61def00-ae47-11eb-91e1-6e67aa064a5d.png"
          rel="noopener noreferrer"
          target="_blank"
        >
          <img
            alt="image"
            src="https://user-images.githubusercontent.com/8448004/117327908-f61def00-ae47-11eb-91e1-6e67aa064a5d.png"
            style="max-width: 100%;"
          />
        </a>
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/29597?u=417a1ec63c2396239beb9453aafdd54275c94765&v=4"
      />
      bvaughn commented 10 days ago
    </header>
    <article>
      <p>
        Oh that's excellent. Can you push a branch and point me at it so I can check it out and repro?
      </p>
      

      <p>
        I got stuck having to install mongodb this morning to run the backend and then I had meetings.
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/8448004?v=4"
      />
      ZackeryBayle commented 10 days ago
    </header>
    <article>
      <p>
        Here is the new branch  
        <code>
          https://github.com/ZackeryBayle/TrollyReactJS/tree/staging-issues
        </code>
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/29597?u=417a1ec63c2396239beb9453aafdd54275c94765&v=4"
      />
      bvaughn commented 10 days ago
    </header>
    <article>
      <p>
        Thanks!
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/29597?u=417a1ec63c2396239beb9453aafdd54275c94765&v=4"
      />
      bvaughn commented 10 days ago
    </header>
    <article>
      <p>
        <a
          class="user-mention"
          data-hovercard-type="user"
          data-hovercard-url="/users/ZackeryBayle/hovercard"
          data-octo-click="hovercard-link-click"
          data-octo-dimensions="link_type:self"
          href="https://github.com/ZackeryBayle"
        >
          @ZackeryBayle
        </a>
         So you just load the page and see the error?
      </p>
      

      <p>
        I can't repro that. (Now that Mongo is installed.)
      </p>
      

      <p>
        Do you have any component filters or anything on in your devtools by chance? Would I need any dummy data in my mongodb to repro this maybe?
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/8448004?v=4"
      />
      ZackeryBayle commented 10 days ago
    </header>
    <article>
      <p>
        correct Just loading the page produces that error. Nothing about the mongo should any effect on this atm because all the components have been removed from the  pages/home.js
      </p>
      

      <p>
        I don't know what a component filter is sorry I'm really new at this. This is actually my capstone project for bootcamp.
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/29597?u=417a1ec63c2396239beb9453aafdd54275c94765&v=4"
      />
      bvaughn commented 10 days ago
    </header>
    <article>
      <p>
        Ah ok that's interesting. I wonder why I'm not able to reproduce the bug using the same branch/app.
      </p>
      

      <p>
        Any chance you'd be up for a quick Zoom call tomorrow to look at it together? No problem if you're not, but if you areâ€“ shoot me an email (brian.david.vaughn at gmail) or a DM on twitter (@ brian_d_vaughn)
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/8448004?v=4"
      />
      ZackeryBayle commented 9 days ago
    </header>
    <article>
      <p>
        Update:  I have restarted my development server this morning and now am not getting the error. I will load in components one at a time to see if any of them will recreate this error and report back when down.
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/29597?u=417a1ec63c2396239beb9453aafdd54275c94765&v=4"
      />
      bvaughn commented 9 days ago
    </header>
    <article>
      <p>
        Thank you for the update, 
        <a
          class="user-mention"
          data-hovercard-type="user"
          data-hovercard-url="/users/ZackeryBayle/hovercard"
          data-octo-click="hovercard-link-click"
          data-octo-dimensions="link_type:self"
          href="https://github.com/ZackeryBayle"
        >
          @ZackeryBayle
        </a>
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/8448004?v=4"
      />
      ZackeryBayle commented 9 days ago
    </header>
    <article>
      <p>
        Okay all components are loaded back in and rendering... no more error. I'm at a loss on this one.
      </p>
      

      <p>
        Only thing I can say is I was trying to figure out how to raise state so I could update a a parent state from a child when this happened. Let me know if there is anything else I can do to provide any more info or help.
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/29597?u=417a1ec63c2396239beb9453aafdd54275c94765&v=4"
      />
      bvaughn commented 9 days ago
    </header>
    <article>
      <p>
        Aw, rats. If you're able to repro again, let me know. Unfortunately, I don't think there's much I can do until I get a repro case.
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/8398353?u=f1f81a0994d6f37ef6811c64718080bef77ec26f&v=4"
      />
      yrambler2001 commented 9 days ago
    </header>
    <article>
      <p>
        <a
          href="https://user-images.githubusercontent.com/8398353/117472414-88fe7c80-af61-11eb-9848-61a594ee1ff1.png"
          rel="noopener noreferrer"
          target="_blank"
        >
          <img
            alt="image"
            src="https://user-images.githubusercontent.com/8398353/117472414-88fe7c80-af61-11eb-9848-61a594ee1ff1.png"
            style="max-width: 100%;"
          />
        </a>
        <br />
        
happens randomly for me too
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/29597?u=417a1ec63c2396239beb9453aafdd54275c94765&v=4"
      />
      bvaughn commented 9 days ago
    </header>
    <article>
      <p>
        <a
          class="user-mention"
          data-hovercard-type="user"
          data-hovercard-url="/users/yrambler2001/hovercard"
          data-octo-click="hovercard-link-click"
          data-octo-dimensions="link_type:self"
          href="https://github.com/yrambler2001"
        >
          @yrambler2001
        </a>
         Need a repro case. Can you share one?
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/8398353?u=f1f81a0994d6f37ef6811c64718080bef77ec26f&v=4"
      />
      yrambler2001 commented 9 days ago
    </header>
    <article>
      <p>
        <a
          class="user-mention"
          data-hovercard-type="user"
          data-hovercard-url="/users/bvaughn/hovercard"
          data-octo-click="hovercard-link-click"
          data-octo-dimensions="link_type:self"
          href="https://github.com/bvaughn"
        >
          @bvaughn
        </a>
         Unfortunately, it happens too randomly for me, page refresh with dev tools refresh fixes this for me.
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/29597?u=417a1ec63c2396239beb9453aafdd54275c94765&v=4"
      />
      bvaughn commented 8 days ago
    </header>
    <article>
      <p>
        Understood. If you're able to narrow it down, even to something that happens once and a while, repro steps would be helpful.
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/12292047?u=b680d2aedb93269d597e78306e6e136c8ebaf328&v=4"
      />
      eps1lon commented 8 days ago
    </header>
    <article>
      <p>
        Repro: 
        <a
          href="https://github.com/eps1lon/react-devtools-repro-no-matching-node/tree/main"
        >
          https://github.com/eps1lon/react-devtools-repro-no-matching-node/tree/main
        </a>
        <br />
        
React devtools version: 4.13.2 (
        <a
          class="commit-link"
          data-hovercard-type="commit"
          data-hovercard-url="https://github.com/facebook/react/commit/e468072e17e3c2e70fa6eca46a074ff3f948c38a/hovercard"
          href="https://github.com/facebook/react/commit/e468072e17e3c2e70fa6eca46a074ff3f948c38a"
        >
          <tt>
            e468072
          </tt>
        </a>
        )
        <br />
        
Steps included in repro.
      </p>
      

      <details
        class="details-reset border rounded-2"
        open=""
      >
        
  
        <summary
          class="px-3 py-2 border-bottom"
        >
          
    
          <svg
            aria-hidden="true"
            class="octicon octicon-device-camera-video"
            height="16"
            version="1.1"
            viewBox="0 0 16 16"
            width="16"
          >
            <path
              d="M16 3.75a.75.75 0 00-1.136-.643L11 5.425V4.75A1.75 1.75 0 009.25 3h-7.5A1.75 1.75 0 000 4.75v6.5C0 12.216.784 13 1.75 13h7.5A1.75 1.75 0 0011 11.25v-.675l3.864 2.318A.75.75 0 0016 12.25v-8.5zm-5 5.075l3.5 2.1v-5.85l-3.5 2.1v1.65zM9.5 6.75v-2a.25.25 0 00-.25-.25h-7.5a.25.25 0 00-.25.25v6.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-4.5z"
              fill-rule="evenodd"
            />
          </svg>
          
    
          <span
            aria-label="Video description react-devtools-repro-no-matching-node.mp4"
            class="m-1"
          >
            react-devtools-repro-no-matching-node.mp4
          </span>
          
    
          <span
            class="dropdown-caret"
          />
          
  
        </summary>
        

  
        <video
          class="d-block rounded-bottom-2 width-fit"
          controls=""
          data-canonical-src="https://user-images.githubusercontent.com/12292047/117544707-e6a6cd80-b022-11eb-9f8f-bb8cfd9f7743.mp4"
          src="https://user-images.githubusercontent.com/12292047/117544707-e6a6cd80-b022-11eb-9f8f-bb8cfd9f7743.mp4"
          style="max-height: 640px;"
        >
          

  
        </video>
        

      </details>
      

    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/29597?u=417a1ec63c2396239beb9453aafdd54275c94765&v=4"
      />
      bvaughn commented 7 days ago
    </header>
    <article>
      <p>
        Thanks for the repro, 
        <a
          class="user-mention"
          data-hovercard-type="user"
          data-hovercard-url="/users/eps1lon/hovercard"
          data-octo-click="hovercard-link-click"
          data-octo-dimensions="link_type:self"
          href="https://github.com/eps1lon"
        >
          @eps1lon
        </a>
        !
      </p>
      

      <hr />
      

      <p>
        What seems to be happening is that Refresh sets a 
        <code>
          _debugNeedsRemount
        </code>
         flag, which clones the old Fiber and splices it into the tree in-place. (This breaks some assumptions on the DevTools side FWIW.)
      </p>
      

      <p>
        Then simultaneously, the component logs a warning during render, which the backend seesâ€“ but when it tries to find the Fiber in its internal map, it sees that it's a new one and creates a new ID for it.
      </p>
      

      <p>
        Then during the subsequent render, it tries to unmount the old Fiber, but with the new ID.
      </p>
      

      <p>
        I'm not sure yet exactly what the right way to fix this is. Errors or warnings logged during initial render that belong to untracked (or not-yet-tracked) Fibers are important. (Most warnings probably happen during initial render.) Need to give this some more thought.
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/29597?u=417a1ec63c2396239beb9453aafdd54275c94765&v=4"
      />
      bvaughn commented 4 days ago
    </header>
    <article>
      <p>
        I think I've captured the bug in a unit test:
        <br />
        

        <a
          href="https://github.com/bvaughn/react/blob/d49ba6b598522e4a5c0d93e215d7e3c7c51fef2c/packages/react-devtools-shared/src/__tests__/FastRefreshDevToolsIntegration-test.js#L164-L254"
        >
          https://github.com/bvaughn/react/blob/d49ba6b598522e4a5c0d93e215d7e3c7c51fef2c/packages/react-devtools-shared/src/__tests__/FastRefreshDevToolsIntegration-test.js#L164-L254
        </a>
      </p>
      

      <p>
        If I remove the render-phase 
        <code>
          console.warn
        </code>
         the test will pass.
      </p>
      

      <p>
        The overall pattern of the failed test is:
      </p>
      

      <h3>
        Mount
      </h3>
      

      <ol>
        

        <li>
          A warning is logged for Component (id:1)
        </li>
        

        <li>
          recordMount() for Component (id:1)
        </li>
        

      </ol>
      

      <h3>
        Patch 1
      </h3>
      

      <ol>
        

        <li>
          A warning is logged for Component (now id:4 because it was cloned by Fast Refresh)
        </li>
        

        <li>
          updateFiberRecursively() for Component (id:4)
        </li>
        

      </ol>
      

      <h3>
        Patch 2
      </h3>
      

      <ol>
        

        <li>
          A warning is logged for Component (now id:7 because it was cloned by Fast Refresh)
        </li>
        

        <li>
          recordUnmount() for Component (id:4) -&gt; 
          <strong>
            This throws!
          </strong>
        </li>
        

        <li>
          recordMount() for Component (id:7)
        </li>
        

        <li>
          recordResetChildren() for Component (id:7) 3:null (2)
        </li>
        

      </ol>
      

      <p>
        Unfortunately the unmount for id 4 causes the Store to throw, because the component was mounted with an id of 1.
      </p>
      

      <p>
        <strong>
          Edit
        </strong>
         This is a bit embarrassing, but I think the test above only catches the bug if 
        <code>
          __DEBUG__
        </code>
         is enabled 
        <em>
          because
        </em>
         logging the Fiber (when the warning/error is caught) causes a new ID to be generated for it. The bug still happens in a CRA app with Refresh enabled, but I'm having trouble reproducing it in a test case. That said, I 
        <em>
          can
        </em>
         see that we're leaking fibers (even though the test doesn't throw).
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/29597?u=417a1ec63c2396239beb9453aafdd54275c94765&v=4"
      />
      bvaughn commented 4 days ago
    </header>
    <article>
      <p>
        I'm not sure of the best way to handle this. DevTools can read the 
        <code>
          _debugNeedsRemount
        </code>
         field during unmount to detect what's happened, but at this pointâ€“ how does it get from id 4 back to id 1? I think I'd have to add a lot of metadata tracking to be able to map from type-to-id.
      </p>
      

      <p>
        I think the best approach might be to add a hook to React to inform DevTools of when a forced clone+remount has happened.
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/29597?u=417a1ec63c2396239beb9453aafdd54275c94765&v=4"
      />
      bvaughn commented 3 days ago
    </header>
    <article>
      <p>
        This test captures the bug:
      </p>
      

      <div
        class="highlight highlight-source-js position-relative"
      >
        <pre>
          <span
            class="pl-en"
          >
            withErrorsOrWarningsIgnored
          </span>
          <span
            class="pl-kos"
          >
            (
          </span>
          <span
            class="pl-kos"
          >
            [
          </span>
          <span
            class="pl-s"
          >
            "Expected warning during render"
          </span>
          <span
            class="pl-kos"
          >
            ]
          </span>
          <span
            class="pl-kos"
          >
            ,
          </span>
           
          <span
            class="pl-kos"
          >
            (
          </span>
          <span
            class="pl-kos"
          >
            )
          </span>
           
          <span
            class="pl-c1"
          >
            =&gt;
          </span>
           
          <span
            class="pl-kos"
          >
            {
          </span>
          
  
          <span
            class="pl-en"
          >
            render
          </span>
          <span
            class="pl-kos"
          >
            (
          </span>
          <span
            class="pl-s"
          >
            \`
          </span>
          

          <span
            class="pl-s"
          >
                  const {useState} = React;
          </span>
          

          <span
            class="pl-s"
          />
          

          <span
            class="pl-s"
          >
                  export default function Component() {
          </span>
          

          <span
            class="pl-s"
          >
                    const [state, setState] = useState(1);
          </span>
          

          <span
            class="pl-s"
          />
          

          <span
            class="pl-s"
          >
                    console.warn("Expected warning during render");
          </span>
          

          <span
            class="pl-s"
          />
          

          <span
            class="pl-s"
          >
                    return &lt;div /&gt;;
          </span>
          

          <span
            class="pl-s"
          >
                  }
          </span>
          

          <span
            class="pl-s"
          >
                \`
          </span>
          <span
            class="pl-kos"
          >
            )
          </span>
          <span
            class="pl-kos"
          >
            ;
          </span>
          

          <span
            class="pl-kos"
          >
            }
          </span>
          <span
            class="pl-kos"
          >
            )
          </span>
          <span
            class="pl-kos"
          >
            ;
          </span>
          

          <span
            class="pl-en"
          >
            expect
          </span>
          <span
            class="pl-kos"
          >
            (
          </span>
          <span
            class="pl-s1"
          >
            store
          </span>
          <span
            class="pl-kos"
          >
            )
          </span>
          <span
            class="pl-kos"
          >
            .
          </span>
          <span
            class="pl-en"
          >
            toMatchInlineSnapshot
          </span>
          <span
            class="pl-kos"
          >
            (
          </span>
          <span
            class="pl-s"
          >
            \`
          </span>
          

          <span
            class="pl-s"
          >
                  âœ• 0, âš  1
          </span>
          

          <span
            class="pl-s"
          >
                  [root]
          </span>
          

          <span
            class="pl-s"
          >
                      &lt;Component&gt; âš 
          </span>
          

          <span
            class="pl-s"
          >
                \`
          </span>
          <span
            class="pl-kos"
          >
            )
          </span>
          <span
            class="pl-kos"
          >
            ;
          </span>
          


          <span
            class="pl-k"
          >
            let
          </span>
           
          <span
            class="pl-s1"
          >
            element
          </span>
           
          <span
            class="pl-c1"
          >
            =
          </span>
           
          <span
            class="pl-s1"
          >
            container
          </span>
          <span
            class="pl-kos"
          >
            .
          </span>
          <span
            class="pl-c1"
          >
            firstChild
          </span>
          <span
            class="pl-kos"
          >
            ;
          </span>
          


          <span
            class="pl-en"
          >
            withErrorsOrWarningsIgnored
          </span>
          <span
            class="pl-kos"
          >
            (
          </span>
          <span
            class="pl-kos"
          >
            [
          </span>
          <span
            class="pl-s"
          >
            "Expected warning during render"
          </span>
          <span
            class="pl-kos"
          >
            ]
          </span>
          <span
            class="pl-kos"
          >
            ,
          </span>
           
          <span
            class="pl-kos"
          >
            (
          </span>
          <span
            class="pl-kos"
          >
            )
          </span>
           
          <span
            class="pl-c1"
          >
            =&gt;
          </span>
           
          <span
            class="pl-kos"
          >
            {
          </span>
          
  
          <span
            class="pl-en"
          >
            patch
          </span>
          <span
            class="pl-kos"
          >
            (
          </span>
          <span
            class="pl-s"
          >
            \`
          </span>
          

          <span
            class="pl-s"
          >
                  const {useState} = React;
          </span>
          

          <span
            class="pl-s"
          />
          

          <span
            class="pl-s"
          >
                  export default function Component() {
          </span>
          

          <span
            class="pl-s"
          >
                    const [state, setState] = useState(1);
          </span>
          

          <span
            class="pl-s"
          />
          

          <span
            class="pl-s"
          >
                    console.warn("Expected warning during render");
          </span>
          

          <span
            class="pl-s"
          />
          

          <span
            class="pl-s"
          >
                    return &lt;div id="one" /&gt;;
          </span>
          

          <span
            class="pl-s"
          >
                  }
          </span>
          

          <span
            class="pl-s"
          >
                \`
          </span>
          <span
            class="pl-kos"
          >
            )
          </span>
          <span
            class="pl-kos"
          >
            ;
          </span>
          

          <span
            class="pl-kos"
          >
            }
          </span>
          <span
            class="pl-kos"
          >
            )
          </span>
          <span
            class="pl-kos"
          >
            ;
          </span>
          

          <span
            class="pl-en"
          >
            expect
          </span>
          <span
            class="pl-kos"
          >
            (
          </span>
          <span
            class="pl-s1"
          >
            store
          </span>
          <span
            class="pl-kos"
          >
            )
          </span>
          <span
            class="pl-kos"
          >
            .
          </span>
          <span
            class="pl-en"
          >
            toMatchInlineSnapshot
          </span>
          <span
            class="pl-kos"
          >
            (
          </span>
          <span
            class="pl-s"
          >
            \`
          </span>
          

          <span
            class="pl-s"
          >
                  âœ• 0, âš  2
          </span>
          

          <span
            class="pl-s"
          >
                  [root]
          </span>
          

          <span
            class="pl-s"
          >
                      &lt;Component&gt; âš 
          </span>
          

          <span
            class="pl-s"
          >
                \`
          </span>
          <span
            class="pl-kos"
          >
            )
          </span>
          <span
            class="pl-kos"
          >
            ;
          </span>
          


          <span
            class="pl-c"
          >
            // State is preserved; this verifies that Fast Refresh is wired up.
          </span>
          

          <span
            class="pl-en"
          >
            expect
          </span>
          <span
            class="pl-kos"
          >
            (
          </span>
          <span
            class="pl-s1"
          >
            container
          </span>
          <span
            class="pl-kos"
          >
            .
          </span>
          <span
            class="pl-c1"
          >
            firstChild
          </span>
          <span
            class="pl-kos"
          >
            )
          </span>
          <span
            class="pl-kos"
          >
            .
          </span>
          <span
            class="pl-en"
          >
            toBe
          </span>
          <span
            class="pl-kos"
          >
            (
          </span>
          <span
            class="pl-s1"
          >
            element
          </span>
          <span
            class="pl-kos"
          >
            )
          </span>
          <span
            class="pl-kos"
          >
            ;
          </span>
          

          <span
            class="pl-s1"
          >
            element
          </span>
           
          <span
            class="pl-c1"
          >
            =
          </span>
           
          <span
            class="pl-s1"
          >
            container
          </span>
          <span
            class="pl-kos"
          >
            .
          </span>
          <span
            class="pl-c1"
          >
            firstChild
          </span>
          <span
            class="pl-kos"
          >
            ;
          </span>
          


          <span
            class="pl-en"
          >
            withErrorsOrWarningsIgnored
          </span>
          <span
            class="pl-kos"
          >
            (
          </span>
          <span
            class="pl-kos"
          >
            [
          </span>
          <span
            class="pl-s"
          >
            "Expected warning during render"
          </span>
          <span
            class="pl-kos"
          >
            ]
          </span>
          <span
            class="pl-kos"
          >
            ,
          </span>
           
          <span
            class="pl-kos"
          >
            (
          </span>
          <span
            class="pl-kos"
          >
            )
          </span>
           
          <span
            class="pl-c1"
          >
            =&gt;
          </span>
           
          <span
            class="pl-kos"
          >
            {
          </span>
          
  
          <span
            class="pl-en"
          >
            patch
          </span>
          <span
            class="pl-kos"
          >
            (
          </span>
          <span
            class="pl-s"
          >
            \`
          </span>
          

          <span
            class="pl-s"
          >
                  const {useEffect, useState} = React;
          </span>
          

          <span
            class="pl-s"
          />
          

          <span
            class="pl-s"
          >
                  export default function Component() {
          </span>
          

          <span
            class="pl-s"
          >
                    const [state, setState] = useState(3);
          </span>
          

          <span
            class="pl-s"
          >
                    useEffect(() =&gt; {});
          </span>
          

          <span
            class="pl-s"
          />
          

          <span
            class="pl-s"
          >
                    console.warn("Expected warning during render");
          </span>
          

          <span
            class="pl-s"
          />
          

          <span
            class="pl-s"
          >
                    return &lt;div id="one" /&gt;;
          </span>
          

          <span
            class="pl-s"
          >
                  }
          </span>
          

          <span
            class="pl-s"
          >
                \`
          </span>
          <span
            class="pl-kos"
          >
            )
          </span>
          <span
            class="pl-kos"
          >
            ;
          </span>
          

          <span
            class="pl-kos"
          >
            }
          </span>
          <span
            class="pl-kos"
          >
            )
          </span>
          <span
            class="pl-kos"
          >
            ;
          </span>
          

          <span
            class="pl-en"
          >
            expect
          </span>
          <span
            class="pl-kos"
          >
            (
          </span>
          <span
            class="pl-s1"
          >
            store
          </span>
          <span
            class="pl-kos"
          >
            )
          </span>
          <span
            class="pl-kos"
          >
            .
          </span>
          <span
            class="pl-en"
          >
            toMatchInlineSnapshot
          </span>
          <span
            class="pl-kos"
          >
            (
          </span>
          <span
            class="pl-s"
          >
            \`
          </span>
          

          <span
            class="pl-s"
          >
                  âœ• 0, âš  3
          </span>
          

          <span
            class="pl-s"
          >
                  [root]
          </span>
          

          <span
            class="pl-s"
          >
                      &lt;Component&gt; âš 
          </span>
          

          <span
            class="pl-s"
          >
                      &lt;Component&gt; âš 
          </span>
          

          <span
            class="pl-s"
          >
                \`
          </span>
          <span
            class="pl-kos"
          >
            )
          </span>
          <span
            class="pl-kos"
          >
            ;
          </span>
        </pre>
        <div
          class="zeroclipboard-container position-absolute right-0 top-0"
        >
          
  
          <clipboard-copy
            aria-label="Copy"
            class="ClipboardButton btn js-clipboard-copy m-2 p-0 tooltipped-no-delay"
            data-copy-feedback="Copied!"
            data-tooltip-direction="w"
            value="withErrorsOrWarningsIgnored([\\"Expected warning during render\\"], () => {
  render(\`
      const {useState} = React;

      export default function Component() {
        const [state, setState] = useState(1);

        console.warn(\\"Expected warning during render\\");

        return <div />;
      }
    \`);
});
expect(store).toMatchInlineSnapshot(\`
      âœ• 0, âš  1
      [root]
          <Component> âš 
    \`);

let element = container.firstChild;

withErrorsOrWarningsIgnored([\\"Expected warning during render\\"], () => {
  patch(\`
      const {useState} = React;

      export default function Component() {
        const [state, setState] = useState(1);

        console.warn(\\"Expected warning during render\\");

        return <div id=\\"one\\" />;
      }
    \`);
});
expect(store).toMatchInlineSnapshot(\`
      âœ• 0, âš  2
      [root]
          <Component> âš 
    \`);

// State is preserved; this verifies that Fast Refresh is wired up.
expect(container.firstChild).toBe(element);
element = container.firstChild;

withErrorsOrWarningsIgnored([\\"Expected warning during render\\"], () => {
  patch(\`
      const {useEffect, useState} = React;

      export default function Component() {
        const [state, setState] = useState(3);
        useEffect(() => {});

        console.warn(\\"Expected warning during render\\");

        return <div id=\\"one\\" />;
      }
    \`);
});
expect(store).toMatchInlineSnapshot(\`
      âœ• 0, âš  3
      [root]
          <Component> âš 
          <Component> âš 
    \`);
"
          >
            
    
            <svg
              aria-hidden="true"
              class="octicon octicon-clippy js-clipboard-clippy-icon d-block m-2"
              height="16"
              version="1.1"
              viewBox="0 0 16 16"
              width="16"
            >
              
    
              <path
                d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"
                fill-rule="evenodd"
              />
              

            </svg>
            
    
            <svg
              aria-hidden="true"
              class="octicon octicon-check js-clipboard-check-icon color-text-success d-block d-sm-none m-2"
              height="16"
              version="1.1"
              viewBox="0 0 16 16"
              width="16"
            >
              
    
              <path
                d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"
                fill-rule="evenodd"
              />
              

            </svg>
            
  
          </clipboard-copy>
          

        </div>
        

      </div>
      

      <p>
        In the third snapshot, there should not be a duplicate 
        <code>
          &lt;Component&gt;
        </code>
        .
      </p>
    </article>
  </div>
  <div
    class="styles__CommentTuppleContainer-sc-1oca8og-1 fNzNgw"
  >
    <header>
      <img
        alt="avatar"
        src="https://avatars.githubusercontent.com/u/29597?u=417a1ec63c2396239beb9453aafdd54275c94765&v=4"
      />
      bvaughn commented 3 days ago
    </header>
    <article>
      <p>
        I 
        <em>
          think
        </em>
         
        <a
          class="issue-link js-issue-link"
          data-error-text="Failed to load title"
          data-hovercard-type="pull_request"
          data-hovercard-url="/facebook/react/pull/21506/hovercard"
          data-id="891367196"
          data-permission-text="Title is private"
          data-url="https://github.com/facebook/react/issues/21506"
          href="https://github.com/facebook/react/pull/21506"
        >
          #21506
        </a>
         might be one way to fix this issue.
      </p>
    </article>
  </div>
</div>
`;
